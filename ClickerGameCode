import sys
from PyQt6.QtCore import QTimer
from PyQt6.QtWidgets import QApplication, QPushButton, QVBoxLayout, QWidget



class Window(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.timing = 30
        self.count = 0
        self.countDown()

        self.button = QPushButton(f"Click Count: {self.count}", self)
        self.button.setFixedSize(300, 400)
        self.button.clicked.connect(self.count_clicks)
        layout = QVBoxLayout()
        layout.addWidget(self.button)
        self.setLayout(layout)


    def count_clicks(self):
        self.count += 1
        self.button.setText(f"Click Count: {self.count}")
        self.timer = QTimer()
        self.timer.setSingleShot(False)
        self.timer.timeout.connect(self.minus_counts)
        self.timer.start(130)

    def minus_counts(self):
        self.count -= 1
        self.button.setText(f"Click Count: {self.count}")

    def countDown(self):
        self.timing = 30
        self.countdown_timer = QTimer()
        self.countdown_timer.timeout.connect(self.update_countdown)
        self.countdown_timer.start(1000)

    def update_countdown(self):
        self.timing -= 1
        print(f"Time left: {self.timing}")
        if self.timing == 0:
            self.countdown_timer.stop()
            self.closeGame()

    def closeGame(self):
        if self.count > 0:
            self.button.setText("You Win!")
        else:
            self.button.setText("You Lose!")
        if hasattr(self, 'timer') and self.timer.isActive():
            self.timer.stop()


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = Window()
    window.show()
    sys.exit(app.exec())
